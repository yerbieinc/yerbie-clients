/*
 * This Java source file was generated by the Gradle 'init' task.
 */
package yerbie.client;

import java.util.UUID;
import yerbie.autogenerated.YerbieAPI;
import yerbie.autogenerated.implementation.YerbieAPIImpl;
import yerbie.autogenerated.models.JobRequest;
import yerbie.exception.InvalidJobDataClass;
import yerbie.exception.SerializationException;
import yerbie.exception.UnserializableJobDataException;
import yerbie.serde.DataTransformer;
import yerbie.serde.JobData;
import yerbie.serde.JobDataTransformer;
import yerbie.serde.JobSpec;
import yerbie.serde.JobSpecTransformer;

public class YerbieClient {
  private static final String URL_FORMAT_STRING = "%s:%d";
  private final YerbieAPI yerbieAPI;
  private final DataTransformer dataTransformer;
  private final JobSpecTransformer jobSpecTransformer;

  public YerbieClient(
      String host,
      long port,
      DataTransformer dataTransformer,
      JobSpecTransformer jobSpecTransformer) {
    this(
        new YerbieAPIImpl(String.format(URL_FORMAT_STRING, host, port)),
        dataTransformer,
        jobSpecTransformer);
  }

  public YerbieClient(
      YerbieAPI yerbieAPI, DataTransformer dataTransformer, JobSpecTransformer jobSpecTransformer) {
    this.yerbieAPI = yerbieAPI;
    this.dataTransformer = dataTransformer;
    this.jobSpecTransformer = jobSpecTransformer;
  }

  public <D> String scheduleAsyncJob(String queue, JobData<D> jobData) {
    return schedule(0, queue, jobData);
  }

  public <D> String scheduleJob(long delaySeconds, String queue, JobData<D> jobData) {
    return schedule(delaySeconds, queue, jobData);
  }

  private <D> String schedule(long delaySeconds, String queue, JobData<D> jobData) {
    try {
      JobDataTransformer jobDataTransformer =
          dataTransformer.getJobDataTransformer(jobData.getSerializationFormat());
      String jobToken = UUID.randomUUID().toString();
      String serializedJobData = jobDataTransformer.serializeJobData(jobData);

      JobSpec jobSpec =
          new JobSpec(
              jobData.getJobDataClass().getName(),
              serializedJobData,
              jobData.getSerializationFormat());

      // Ensure that it's possible to deserialize the job data before sending it over to store.
      JobData<D> jobDataDeserialized =
          jobDataTransformer.deserializeJobData(
              jobSpec.getSerializedJobData(), (Class<D>) Class.forName(jobSpec.getJobClass()));

      String serializedJobSpec = jobSpecTransformer.serializeJobSpec(jobSpec);

      JobRequest jobRequest =
          new JobRequest()
              .withJobData(serializedJobSpec)
              .withJobToken(jobToken)
              .withDelaySeconds(delaySeconds)
              .withQueue(queue);

      yerbieAPI.scheduleJob(jobRequest);
      return jobToken;
    } catch (ClassNotFoundException ex) {
      throw new InvalidJobDataClass(
          String.format(
              "Cannot load the job data class for job data class %s.",
              jobData.getJobDataClass().getName()),
          ex);
    } catch (SerializationException ex) {
      throw new UnserializableJobDataException(
          String.format(
              "Unable to serialize jobData class %s.", jobData.getJobDataClass().getName()),
          ex);
    }
  }
}
